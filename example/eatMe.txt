
// What if it was a proprietary script?
// Based on https://support.oculus.com/487096395667734

/**************************
* CREATE VARIABLES
***************************/
var originPos as vector [0] [0] [0]
var originRot as rotation [0] [0] [0]
var eat as boolean {false}

/************************************
* When world is started 
*************************************/
When world is started {
  // Set to and position of object
  set [originPos] to [position of [self]]
  
  // Set to and rotation of object
  set [originRot] to [rotation of [self]]
  
  // Set visibility 
  action [visibility with boolean {true}] on [self]
  
  // Set collidability
  action [collidability with boolean {true}] on [self]
}

/************************************
* When object is grabbed by player
*************************************/
When event [grabstart] with [player] is received {
  // Set to
  set [eat] to boolean {true}
  
  // Send event with delay
  send event [eatLoop] to [self] after [0.5] seconds with []
  
  // Cancel sending event with delay
  cancel sending event [eatReturn] to [self]
}

/************************************
* When object is released by player
*************************************/
When event [grabend] with [player] is received {
  // Cancel sending event with delay
  cancel sending event [eatLoop] to [self]
  
  // Send event with delay
  send event [eatReturn] to [self] after [3] seconds with []
  
  // Set to
  set [eat] to boolean {false}
}

/************************************
When event is received
*************************************/
When event [eatLoop] with [] is received {
  // distance to -> distance from [a] to [b]
  if distance from [position of [self]] to head position of [owner_of [self]] < 0.3 {
    // Force release
    force release on [self]
    
    // Play sound
    play sound on [sfx]
    
    // Set visibility 
    action [visibility with boolean {false}] on [self]

    // Set collidability
    action [collidability with boolean {false}] on [self]
    
    // Send event with delay
    send event [eatReturn] to [self] after [3] seconds with []
  }
  
  if eat == true {
    // Send event with delay
    send event [eatLoop] to [self] after [0.5] seconds with []
  }
}


/************************************
When event is received
*************************************/
When event [eatReturn] with [] is received {
  // Move to
  action [moveto with [originPos]] on [self]
  
  // Rotate to
  action [rotateto with [originRot]] on [self]

  // Set visibility 
  action [visibility with boolean {true}] on [self]
  
  // Set collidability
  action [collidability with boolean {true}] on [self]
}


// What if it was JAVASCRIPT/TYPESCRIPT? 
// A experiment in syntax, not real code - Nov 20, 2022

/************************************
IMPORT HW API
*************************************/
import * as hw from "horizonworldapi_v0.0.0;

/**************************
* CREATE VARIABLES
***************************/
const originPos: {x: number, y: number, z: number} = {x: 0, y: 0, z: 0}
const originRot: {x: number, y: number, z: number} = {x: 0, y: 0, z: 0}
let eat: boolean = false

/************************************
* When world is started 
*************************************/
if (hw.when_world_is_started === true {
	
  // Set to and position of object(self)
  originPos = hw.postionOf(self)
  
  // Set to and rotation of object(self)
  originRot = hw.rotationOf(self)
  
  // Set visibility on self
  hw.visibilityOf(self, true)
  
  // Set collidability on self
  hw.collidabilityOf(self, true)

}

/************************************
* When object is grabbed by player
*************************************/
When event [grabstart] with [player] is received {
  // Set to
  set [eat] to boolean {true}
  
  // Send event with delay
  send event [eatLoop] to [self] after [0.5] seconds with []
  
  // Cancel sending event with delay
  cancel sending event [eatReturn] to [self]
}